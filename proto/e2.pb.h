/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.7-dev */

#ifndef PB_PROTO_E2_PB_H_INCLUDED
#define PB_PROTO_E2_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _E2_dummy_response {
    uint32_t req_id;
    char mess_string[64];
    bool result;
} E2_dummy_response;

typedef struct _E2_request {
    uint32_t req_id;
} E2_request;

typedef struct _SimpleMessage {
    int32_t lucky_number;
} SimpleMessage;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define SimpleMessage_init_default               {0}
#define E2_request_init_default                  {0}
#define E2_dummy_response_init_default           {0, "", 0}
#define SimpleMessage_init_zero                  {0}
#define E2_request_init_zero                     {0}
#define E2_dummy_response_init_zero              {0, "", 0}

/* Field tags (for use in manual encoding/decoding) */
#define E2_dummy_response_req_id_tag             1
#define E2_dummy_response_mess_string_tag        2
#define E2_dummy_response_result_tag             3
#define E2_request_req_id_tag                    1
#define SimpleMessage_lucky_number_tag           1

/* Struct field encoding specification for nanopb */
#define SimpleMessage_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, INT32,    lucky_number,      1)
#define SimpleMessage_CALLBACK NULL
#define SimpleMessage_DEFAULT NULL

#define E2_request_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UINT32,   req_id,            1)
#define E2_request_CALLBACK NULL
#define E2_request_DEFAULT NULL

#define E2_dummy_response_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UINT32,   req_id,            1) \
X(a, STATIC,   REQUIRED, STRING,   mess_string,       2) \
X(a, STATIC,   REQUIRED, BOOL,     result,            3)
#define E2_dummy_response_CALLBACK NULL
#define E2_dummy_response_DEFAULT NULL

extern const pb_msgdesc_t SimpleMessage_msg;
extern const pb_msgdesc_t E2_request_msg;
extern const pb_msgdesc_t E2_dummy_response_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define SimpleMessage_fields &SimpleMessage_msg
#define E2_request_fields &E2_request_msg
#define E2_dummy_response_fields &E2_dummy_response_msg

/* Maximum encoded size of messages (where known) */
#define E2_dummy_response_size                   73
#define E2_request_size                          6
#define SimpleMessage_size                       11

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
